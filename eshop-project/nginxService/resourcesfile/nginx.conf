
#user  nobody;
worker_processes  1;

#错误日志存放路径 
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#指定pid存放文件    
pid        logs/nginx.pid;   


events {
    #使用网络IO模型linux建议epoll，FreeBSD建议采用kqueue，window下不指定。    
    #use epoll;

    #允许最大连接数   
    worker_connections  1024;
}


# autoindex on;# 显示目录
# autoindex_exact_size on;# 显示文件大小
# autoindex_localtime on;# 显示文件时间

http {
    include       mime.types;
    default_type  application/octet-stream;

    #定义日志格式 
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;


    #windows 文件服务器配置
    server {
        #端口号
        listen       9001;
        #本机
        server_name  127.0.0.1;

        #请求编码
        charset utf-8;

        #access_log  logs/host.access.log  main;

        #存放图片的文件夹  F:/innovaeeGit/eshop/nginxService/resourcesfile/images/
        #存放日志的文件    F:/innovaeeGit/eshop/nginxService/resourcesfile/images/img_nginx.log     
        #访问地址是       127.0.0.1:8089/xxxx.jpg
        location ~ .*\.(gif|jpg|jpeg|png)$ {  
            expires 24h;  
            root F:/innovaeeGit/eshop/nginxService/resourcesfile/images/;#指定图片存放路径  
            access_log F:/innovaeeGit/eshop/nginxService/resourcesfile/images/img_nginx.log;#图片路径  
            proxy_store on;  
            proxy_store_access user:rw group:rw all:rw;  
            proxy_temp_path         F:/innovaeeGit/eshop/nginxService/resourcesfile/images/;#图片路径  
            proxy_redirect          off;  
      
            proxy_set_header        Host 127.0.0.1;  
            proxy_set_header        X-Real-IP $remote_addr;  
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;  
            client_max_body_size    10m;  
            client_body_buffer_size 1280k;  
            proxy_connect_timeout   900;  
            proxy_send_timeout      900;  
            proxy_read_timeout      900;  
            proxy_buffer_size       40k;  
            proxy_buffers           40 320k;  
            proxy_busy_buffers_size 640k;  
            proxy_temp_file_write_size 640k;  
            if ( !-e $request_filename)  {  
                proxy_pass  http://127.0.0.1:8089;#代理访问地址  
            }  
        }
        

		#文件访问路径  
		location /files/{  
			default_type  'application/octet-stream';  
			alias F:/innovaeeGit/eshop/nginxService/resourcesfile/images/;  
		}  


        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
