package online.shixun.demo.eshop.eshopservicetype.module.type.mapper;

import online.shixun.demo.eshop.eshopservicetype.dto.EshopType;
import online.shixun.demo.eshop.eshopservicetype.dto.EshopTypeCriteria;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

@Mapper
public interface EshopTypeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_type
     *
     * @mbg.generated Fri May 11 10:31:51 CST 2018
     */
    @SelectProvider(type = EshopTypeSqlProvider.class, method = "countByExample")
    long countByExample(EshopTypeCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_type
     *
     * @mbg.generated Fri May 11 10:31:51 CST 2018
     */
    @DeleteProvider(type = EshopTypeSqlProvider.class, method = "deleteByExample")
    int deleteByExample(EshopTypeCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_type
     *
     * @mbg.generated Fri May 11 10:31:51 CST 2018
     */
    @Delete({
            "delete from eshop_type",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_type
     *
     * @mbg.generated Fri May 11 10:31:51 CST 2018
     */
    @Insert({
            "insert into eshop_type (id, is_del, ",
            "create_time, update_time, ",
            "type_name, type_parent_id, ",
            "type_note, type_url, ",
            "type_image, type_ico, ",
            "type_index, type_description)",
            "values (#{id,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER}, ",
            "#{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, ",
            "#{typeName,jdbcType=VARCHAR}, #{typeParentId,jdbcType=VARCHAR}, ",
            "#{typeNote,jdbcType=VARCHAR}, #{typeUrl,jdbcType=VARCHAR}, ",
            "#{typeImage,jdbcType=VARCHAR}, #{typeIco,jdbcType=VARCHAR}, ",
            "#{typeIndex,jdbcType=INTEGER}, #{typeDescription,jdbcType=VARCHAR})"
    })
    int insert(EshopType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_type
     *
     * @mbg.generated Fri May 11 10:31:51 CST 2018
     */
    @InsertProvider(type = EshopTypeSqlProvider.class, method = "insertSelective")
    int insertSelective(EshopType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_type
     *
     * @mbg.generated Fri May 11 10:31:51 CST 2018
     */
    @SelectProvider(type = EshopTypeSqlProvider.class, method = "selectByExample")
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "is_del", property = "isDel", jdbcType = JdbcType.INTEGER),
            @Result(column = "create_time", property = "createTime", jdbcType = JdbcType.DATE),
            @Result(column = "update_time", property = "updateTime", jdbcType = JdbcType.DATE),
            @Result(column = "type_name", property = "typeName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_parent_id", property = "typeParentId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_note", property = "typeNote", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_url", property = "typeUrl", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_image", property = "typeImage", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_ico", property = "typeIco", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_index", property = "typeIndex", jdbcType = JdbcType.INTEGER),
            @Result(column = "type_description", property = "typeDescription", jdbcType = JdbcType.VARCHAR)
    })
    List<EshopType> selectByExample(EshopTypeCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_type
     *
     * @mbg.generated Fri May 11 10:31:51 CST 2018
     */
    @Select({
            "select",
            "id, is_del, create_time, update_time, type_name, type_parent_id, type_note, ",
            "type_url, type_image, type_ico, type_index, type_description",
            "from eshop_type",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "is_del", property = "isDel", jdbcType = JdbcType.INTEGER),
            @Result(column = "create_time", property = "createTime", jdbcType = JdbcType.DATE),
            @Result(column = "update_time", property = "updateTime", jdbcType = JdbcType.DATE),
            @Result(column = "type_name", property = "typeName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_parent_id", property = "typeParentId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_note", property = "typeNote", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_url", property = "typeUrl", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_image", property = "typeImage", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_ico", property = "typeIco", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_index", property = "typeIndex", jdbcType = JdbcType.INTEGER),
            @Result(column = "type_description", property = "typeDescription", jdbcType = JdbcType.VARCHAR)
    })
    EshopType selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_type
     *
     * @mbg.generated Fri May 11 10:31:51 CST 2018
     */
    @UpdateProvider(type = EshopTypeSqlProvider.class, method = "updateByExampleSelective")
    int updateByExampleSelective(@Param("record") EshopType record, @Param("example") EshopTypeCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_type
     *
     * @mbg.generated Fri May 11 10:31:51 CST 2018
     */
    @UpdateProvider(type = EshopTypeSqlProvider.class, method = "updateByExample")
    int updateByExample(@Param("record") EshopType record, @Param("example") EshopTypeCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_type
     *
     * @mbg.generated Fri May 11 10:31:51 CST 2018
     */
    @UpdateProvider(type = EshopTypeSqlProvider.class, method = "updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(EshopType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_type
     *
     * @mbg.generated Fri May 11 10:31:51 CST 2018
     */
    @Update({
            "update eshop_type",
            "set is_del = #{isDel,jdbcType=INTEGER},",
            "create_time = #{createTime,jdbcType=DATE},",
            "update_time = #{updateTime,jdbcType=DATE},",
            "type_name = #{typeName,jdbcType=VARCHAR},",
            "type_parent_id = #{typeParentId,jdbcType=VARCHAR},",
            "type_note = #{typeNote,jdbcType=VARCHAR},",
            "type_url = #{typeUrl,jdbcType=VARCHAR},",
            "type_image = #{typeImage,jdbcType=VARCHAR},",
            "type_ico = #{typeIco,jdbcType=VARCHAR},",
            "type_index = #{typeIndex,jdbcType=INTEGER},",
            "type_description = #{typeDescription,jdbcType=VARCHAR}",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(EshopType record);

    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "is_del", property = "isDel", jdbcType = JdbcType.INTEGER),
            @Result(column = "create_time", property = "createTime", jdbcType = JdbcType.DATE),
            @Result(column = "update_time", property = "updateTime", jdbcType = JdbcType.DATE),
            @Result(column = "type_name", property = "typeName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_parent_id", property = "typeParentId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_note", property = "typeNote", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_url", property = "typeUrl", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_image", property = "typeImage", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_ico", property = "typeIco", jdbcType = JdbcType.VARCHAR),
            @Result(column = "type_index", property = "typeIndex", jdbcType = JdbcType.INTEGER),
            @Result(column = "type_description", property = "typeDescription", jdbcType = JdbcType.VARCHAR)
    })
    @Select(value = "SELECT * FROM `eshop_type` WHERE `type_parent_id` = #{id} and is_del=2 ")
    List<EshopType> findChildren(@Param("id") String id);
}